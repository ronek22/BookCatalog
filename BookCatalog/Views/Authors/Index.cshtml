@model IEnumerable<BookCatalog.Models.Author>
@inject SignInManager<ApplicationUser> SignInManager
@{
    ViewData["Title"] = "Authors";
}

<h2>Authors</h2>

@if (SignInManager.IsSignedIn(User) && !User.IsInRole("User"))
{
    <p>
        <a id="CreateAuthor" asp-action="Create" class="btn btn-success btn-sm">Create New</a>
    </p>

}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @if (SignInManager.IsSignedIn(User) && !User.IsInRole("User"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.AuthorId" class="btn btn-primary btn-sm">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.AuthorId" class="btn btn-info btn-sm">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.AuthorId" class="btn btn-danger btn-sm">Delete</a>
                    }
                    else
                    {
                        <a asp-action="Details" asp-route-id="@item.AuthorId" class="btn btn-info btn-sm">Details</a>
                    }
                </td>
            </tr>
        }
    </tbody>

</table>
